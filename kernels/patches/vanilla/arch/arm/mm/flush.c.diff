--- ./vanilla//arch/arm/mm/flush.c	2010-02-23 17:38:51.000000000 +0200
+++ ./default//arch/arm/mm/flush.c	2012-05-23 10:43:54.074935665 +0300
@@ -120,6 +120,8 @@
 
 void __flush_dcache_page(struct address_space *mapping, struct page *page)
 {
+	void *addr;
+
 	/*
 	 * Writeback any data associated with the kernel mapping of this
 	 * page.  This ensures that data in the physical page is mutually
@@ -128,11 +130,23 @@
 #ifdef CONFIG_HIGHMEM
 	/*
 	 * kmap_atomic() doesn't set the page virtual address, and
-	 * kunmap_atomic() takes care of cache flushing already.
+	 * kunmap_atomic() takes care of cache flushing already; however,
+	 * the kmap must be pinned locally to ensure that no other context
+	 * unmaps it during the cache maintenance
 	 */
-	if (page_address(page))
+	if (PageHighMem(page))
+		addr = kmap_high_get(page);
+	else
+#endif
+		addr = page_address(page);
+
+	if (addr) {
+		__cpuc_flush_dcache_page(addr);
+#ifdef CONFIG_HIGHMEM
+		if (PageHighMem(page))
+			kunmap_high(page);
 #endif
-		__cpuc_flush_dcache_page(page_address(page));
+	}
 
 	/*
 	 * If this is a page cache page, and we have an aliasing VIPT cache,
