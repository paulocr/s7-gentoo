--- ./vanilla//include/linux/power_supply.h	2010-02-23 17:38:51.000000000 +0200
+++ ./default//include/linux/power_supply.h	2012-05-23 10:44:04.619935197 +0300
@@ -14,6 +14,7 @@
 #define __LINUX_POWER_SUPPLY_H__
 
 #include <linux/device.h>
+#include <linux/wakelock.h>
 #include <linux/workqueue.h>
 #include <linux/leds.h>
 
@@ -108,6 +109,8 @@
 	POWER_SUPPLY_PROP_CAPACITY, /* in percents! */
 	POWER_SUPPLY_PROP_CAPACITY_LEVEL,
 	POWER_SUPPLY_PROP_TEMP,
+	POWER_SUPPLY_PROP_PWRDWN_CHG ,
+	POWER_SUPPLY_PROP_VOLTAGE_DELTA ,	
 	POWER_SUPPLY_PROP_TEMP_AMBIENT,
 	POWER_SUPPLY_PROP_TIME_TO_EMPTY_NOW,
 	POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG,
@@ -152,6 +155,9 @@
 	/* private */
 	struct device *dev;
 	struct work_struct changed_work;
+	spinlock_t changed_lock;
+	bool changed;
+	struct wake_lock work_wake_lock;
 
 #ifdef CONFIG_LEDS_TRIGGERS
 	struct led_trigger *charging_full_trig;
@@ -202,4 +208,11 @@
 /* For APM emulation, think legacy userspace. */
 extern struct class *power_supply_class;
 
+enum battery_measurement_type {
+	BATT_MEASURE_BY_QC_SOFTWARE = 0,
+	BATT_MEASURE_BY_BQ275x0,
+	BATT_MEASURE_UNKNOW,
+};
+extern void power_set_batt_measurement_type(enum battery_measurement_type type);
+extern int bq275x0_register_power_supply(struct power_supply ** ppBq275x0_power_supply);
 #endif /* __LINUX_POWER_SUPPLY_H__ */
